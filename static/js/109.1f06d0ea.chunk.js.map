{"version":3,"file":"static/js/109.1f06d0ea.chunk.js","mappings":"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","sources":["demos/media-velocita-secante/MediaVelocitaSecanteDemo.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\n\n/**\n * Demo interattiva: velocità media come coefficiente angolare della secante\n *\n * Include:\n *  - Marcatori di massimi/minimi locali con etichette\n *  - Pulsante \"Anima t₂ → t₁\" (secante → tangente)\n *  - Grafico della derivata numerica v(t) sotto, con linea orizzontale a v̄\n *  - ✨ Nuovo: retta **tangente** in t₁ e **toggle** per mostrare/nascondere **secante** e **tangente**\n *\n * s(t) è generata come combinazione di sinusoidi + deriva per garantire estremi locali.\n * Rendering via SVG.\n * Salva come: src/demos/fisica/MediaVelocitaSecanteDemo.tsx\n */\n\n// ---------- Costanti di scena ----------\nconst T_MAX = 10; // secondi\nconst N_SAMPLES = 500; // risoluzione della curva\n\n// ---------- Utility ----------\nfunction linspace(n: number, a = 0, b = 1) {\n    const arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = a + (i * (b - a)) / (n - 1);\n    return arr;\n}\nconst clamp = (x: number, a: number, b: number) => Math.max(a, Math.min(b, x));\nconst lerp = (a: number, b: number, t: number) => a + (b - a) * t;\n\nfunction interp1(tArr: number[], yArr: number[], t: number) {\n    // Interpolazione lineare y(t) dato array monotono tArr\n    const n = tArr.length;\n    if (t <= tArr[0]) return yArr[0];\n    if (t >= tArr[n - 1]) return yArr[n - 1];\n    // ricerca binaria\n    let lo = 0, hi = n - 1;\n    while (hi - lo > 1) {\n        const mid = (lo + hi) >> 1;\n        if (tArr[mid] <= t) lo = mid; else hi = mid;\n    }\n    const u = (t - tArr[lo]) / (tArr[hi] - tArr[lo]);\n    return lerp(yArr[lo], yArr[hi], u);\n}\n\n// ---------- Generatore s(t) non monotono con massimi/minimi ----------\nfunction makePosition(seed: number) {\n    // PRNG deterministico semplice\n    let s = seed >>> 0;\n    const rnd = () => (s = (s * 1664525 + 1013904223) >>> 0) / 2 ** 32;\n\n    // Parametri casuali\n    const drift = (rnd() - 0.5) * 2 * 1.0; // deriva lineare [-1,1] m/s\n    const A1 = 6 + 10 * rnd(); // ampiezze per varianza verticale\n    const A2 = 4 + 8 * rnd();\n    const A3 = 2 + 6 * rnd();\n    const w1 = 1 + Math.floor(rnd() * 3); // 1..3 onde su [0,T_MAX]\n    const w2 = 2 + Math.floor(rnd() * 3); // 2..4\n    const w3 = 3 + Math.floor(rnd() * 4); // 3..6\n    const phi1 = 2 * Math.PI * rnd();\n    const phi2 = 2 * Math.PI * rnd();\n    const phi3 = 2 * Math.PI * rnd();\n    const offset = (rnd() - 0.5) * 8; // spostamento verticale iniziale\n\n    return (t: number) =>\n        offset + drift * t\n        + A1 * Math.sin((2 * Math.PI * w1 * t) / T_MAX + phi1)\n        + A2 * Math.cos((2 * Math.PI * w2 * t) / T_MAX + phi2)\n        + A3 * Math.sin((2 * Math.PI * w3 * t) / T_MAX + phi3);\n}\n\n// Conta cambi di segno nella derivata discreta (per test)\nfunction countSlopeSignChanges(yArr: number[]) {\n    let changes = 0;\n    let prevSign = 0;\n    for (let i = 1; i < yArr.length; i++) {\n        const dy = yArr[i] - yArr[i - 1];\n        const sign = dy > 0 ? 1 : dy < 0 ? -1 : 0;\n        if (sign !== 0 && prevSign !== 0 && sign !== prevSign) changes++;\n        if (sign !== 0) prevSign = sign;\n    }\n    return changes;\n}\n\n// Derivata numerica centrale (v(t) ≈ ds/dt)\nfunction numericDerivative(tArr: number[], sArr: number[]) {\n    const n = tArr.length;\n    const v = new Array(n).fill(0);\n    for (let i = 1; i < n - 1; i++) v[i] = (sArr[i + 1] - sArr[i - 1]) / (tArr[i + 1] - tArr[i - 1]);\n    v[0] = (sArr[1] - sArr[0]) / (tArr[1] - tArr[0]);\n    v[n - 1] = (sArr[n - 1] - sArr[n - 2]) / (tArr[n - 1] - tArr[n - 2]);\n    return v;\n}\n\n// Stima vertice parabolico locale tra (i-1,i,i+1)\nfunction refineExtremum(tArr: number[], sArr: number[], i: number) {\n    const x0 = tArr[i - 1], y0 = sArr[i - 1];\n    const x1 = tArr[i], y1 = sArr[i];\n    const x2 = tArr[i + 1], y2 = sArr[i + 1];\n    const denom = y2 - 2 * y1 + y0;\n    if (Math.abs(denom) < 1e-12) return { t: x1, s: y1 };\n    const tPeak = x1 - 0.5 * (x2 - x0) * ((y2 - y0) / denom);\n    const tClamped = clamp(tPeak, x0, x2);\n    const sPeak = interp1(tArr, sArr, tClamped);\n    return { t: tClamped, s: sPeak };\n}\n\nfunction findLocalExtrema(tArr: number[], sArr: number[]) {\n    const maxima: { t: number; s: number }[] = [];\n    const minima: { t: number; s: number }[] = [];\n    for (let i = 1; i < sArr.length - 1; i++) {\n        const dy1 = sArr[i] - sArr[i - 1];\n        const dy2 = sArr[i + 1] - sArr[i];\n        if (dy1 > 0 && dy2 < 0) {\n            const p = refineExtremum(tArr, sArr, i);\n            maxima.push(p);\n        } else if (dy1 < 0 && dy2 > 0) {\n            const p = refineExtremum(tArr, sArr, i);\n            minima.push(p);\n        }\n    }\n    // Limita il numero di etichette per non affollare (max 12 totali)\n    const pickStep = Math.ceil((maxima.length + minima.length) / 12) || 1;\n    return {\n        maxima: maxima.filter((_, idx) => idx % pickStep === 0),\n        minima: minima.filter((_, idx) => idx % pickStep === 0),\n    };\n}\n\n// ---------- Componente principale ----------\nexport default function MediaVelocitaSecanteDemo() {\n    // dimensioni SVG\n    const WIDTH = 900, HEIGHT = 520, PAD_L = 64, PAD_R = 28, PAD_T = 28, PAD_B = 70;\n    const HEIGHT_V = 220; // altezza sotto-grafico velocità\n\n    // dataset casuale (rigenerabile)\n    const [seed, setSeed] = useState<number>(() => Math.floor(Math.random() * 1e9));\n    const tArr = useMemo(() => linspace(N_SAMPLES, 0, T_MAX), []);\n    const sFunc = useMemo(() => makePosition(seed), [seed]);\n    const sArr = useMemo(() => tArr.map((t) => sFunc(t)), [sFunc, tArr]);\n    const vArr = useMemo(() => numericDerivative(tArr, sArr), [tArr, sArr]);\n\n    // range verticale dinamico con padding\n    const sMinRaw = useMemo(() => Math.min(...sArr), [sArr]);\n    const sMaxRaw = useMemo(() => Math.max(...sArr), [sArr]);\n    const padV = 0.08 * Math.max(1, sMaxRaw - sMinRaw);\n    const sMin = sMinRaw - padV;\n    const sMax = sMaxRaw + padV;\n    const spanS = Math.max(1e-6, sMax - sMin);\n\n    // range verticale per v(t)\n    const vMinRaw = useMemo(() => Math.min(...vArr), [vArr]);\n    const vMaxRaw = useMemo(() => Math.max(...vArr), [vArr]);\n    const padVv = 0.08 * Math.max(1, vMaxRaw - vMinRaw);\n    const vMin = vMinRaw - padVv;\n    const vMax = vMaxRaw + padVv;\n    const spanV = Math.max(1e-6, vMax - vMin);\n\n    // trasformazioni asse\n    const toX = (t: number) => PAD_L + (t / T_MAX) * (WIDTH - PAD_L - PAD_R);\n    const toY = (s: number) => HEIGHT - PAD_B - ((s - sMin) / spanS) * (HEIGHT - PAD_T - PAD_B);\n    const toYv = (v: number) => HEIGHT_V - 40 - ((v - vMin) / spanV) * (HEIGHT_V - 70);\n    const fromX = (px: number) => clamp(((px - PAD_L) / (WIDTH - PAD_L - PAD_R)) * T_MAX, 0, T_MAX);\n\n    // punti mobili t1, t2\n    const [t1, setT1] = useState(2);\n    const [t2, setT2] = useState(7);\n    const s1 = useMemo(() => interp1(tArr, sArr, t1), [tArr, sArr, t1]);\n    const s2 = useMemo(() => interp1(tArr, sArr, t2), [tArr, sArr, t2]);\n    const canCompute = Math.abs(t2 - t1) > 1e-6;\n    const vMedia = canCompute ? (s2 - s1) / (t2 - t1) : NaN;\n\n    // ✨ Nuovi toggle visibilità\n    const [showSecant, setShowSecant] = useState(true);\n    const [showTangent, setShowTangent] = useState(false);\n\n    // drag gestione\n    const [drag, setDrag] = useState<null | \"t1\" | \"t2\">(null);\n    function onMouseDown(e: React.MouseEvent<SVGSVGElement>) {\n        const rect = (e.currentTarget as SVGSVGElement).getBoundingClientRect();\n        const mx = e.clientX - rect.left;\n        const mt = fromX(mx);\n        const d1 = Math.abs(mt - t1);\n        const d2 = Math.abs(mt - t2);\n        setDrag(d1 <= d2 ? \"t1\" : \"t2\");\n    }\n    function onMouseMove(e: React.MouseEvent<SVGSVGElement>) {\n        if (!drag) return;\n        const rect = (e.currentTarget as SVGSVGElement).getBoundingClientRect();\n        const mx = e.clientX - rect.left;\n        const mt = fromX(mx);\n        if (drag === \"t1\") setT1(mt > t2 ? t2 : mt);\n        else setT2(mt < t1 ? t1 : mt);\n    }\n    function onMouseUp() { setDrag(null); }\n    function onMouseLeave() { setDrag(null); }\n\n    // rigenera dataset\n    function randomize() { setSeed(Math.floor(Math.random() * 1e9)); }\n\n    // Estremi locali (per markers)\n    const { maxima, minima } = useMemo(() => findLocalExtrema(tArr, sArr), [tArr, sArr]);\n\n    // Animazione t2 -> t1 (secante -> tangente)\n    const [animating, setAnimating] = useState(false);\n    useEffect(() => {\n        if (!animating) return;\n        let raf: number;\n        const step = () => {\n            const dist = t2 - t1;\n            if (dist <= 0.02) { setAnimating(false); return; }\n            const next = t2 - Math.max(0.01, dist * 0.07);\n            setT2(next < t1 ? t1 : next);\n            raf = requestAnimationFrame(step);\n        };\n        raf = requestAnimationFrame(step);\n        return () => cancelAnimationFrame(raf);\n    }, [animating, t1, t2]);\n\n    // griglia e ticks\n    const tTicks = useMemo(() => Array.from({ length: T_MAX + 1 }, (_, i) => i), []);\n    const sTicks = useMemo(() => {\n        const k = 6;\n        const step = spanS / k;\n        const arr: number[] = [];\n        for (let i = 0; i <= k; i++) arr.push(sMin + i * step);\n        return arr;\n    }, [spanS, sMin]);\n    const vTicks = useMemo(() => {\n        const k = 5;\n        const step = spanV / k;\n        const arr: number[] = [];\n        for (let i = 0; i <= k; i++) arr.push(vMin + i * step);\n        return arr;\n    }, [spanV, vMin]);\n\n    // path della curva s(t)\n    const pathS = useMemo(() => {\n        let d = \"\";\n        for (let i = 0; i < tArr.length; i++) {\n            const px = toX(tArr[i]);\n            const py = toY(sArr[i]);\n            d += (i === 0 ? `M ${px} ${py}` : ` L ${px} ${py}`);\n        }\n        return d;\n    }, [tArr, sArr]);\n\n    // path di v(t)\n    const pathV = useMemo(() => {\n        let d = \"\";\n        for (let i = 0; i < tArr.length; i++) {\n            const px = toX(tArr[i]);\n            const py = toYv(vArr[i]);\n            d += (i === 0 ? `M ${px} ${py}` : ` L ${px} ${py}`);\n        }\n        return d;\n    }, [tArr, vArr]);\n\n    // valore di v(t1) per la tangente\n    const vT1 = useMemo(() => interp1(tArr, vArr, t1), [tArr, vArr, t1]);\n\n    // === Self-tests (solo in dev) ===\n    useEffect(() => {\n        if (process.env.NODE_ENV === \"production\") return;\n        // 1) Deve esserci variabilità e almeno un cambio di segno della derivata discreta (indicatore di estremo locale)\n        const changes = countSlopeSignChanges(sArr);\n        if (changes < 1) {\n            // eslint-disable-next-line no-console\n            console.warn(\"[TEST] Poche/nessuna inversione di pendenza: considerare un seed diverso\", { changes, seed });\n        }\n        // 2) Caso sintetico a velocità costante: s(t)=5t → v̄=5 su ogni coppia\n        const tTest = linspace(50, 0, 10);\n        const sLin = tTest.map((t) => 5 * t);\n        const tA = 1.2, tB = 5.7;\n        const sA = interp1(tTest, sLin, tA);\n        const sB = interp1(tTest, sLin, tB);\n        const vAvg = (sB - sA) / (tB - tA);\n        if (Math.abs(vAvg - 5) > 1e-6) {\n            // eslint-disable-next-line no-console\n            console.warn(\"[TEST] Velocità costante fallito\", vAvg);\n        }\n    }, [sArr, seed]);\n\n    return (\n        <div style={{ maxWidth: 1000, margin: \"0 auto\", padding: 16 }}>\n            <h1 style={{ fontSize: 22, fontWeight: 700, marginBottom: 6 }}>\n                Velocità media = coefficiente angolare della secante\n            </h1>\n            <p style={{ color: \"#475569\", marginTop: 0 }}>\n                Trascina i due marcatori temporali <b>t₁</b> e <b>t₂</b> sul grafico (o usa gli slider).\n                La retta <i>secante</i> tra i punti \\((t₁, s(t₁))\\) e \\((t₂, s(t₂))\\) ha coefficiente angolare pari alla\n                <b> velocità media</b> <code style={{ marginLeft: 6 }}>v̄ = (s(t₂) − s(t₁)) / (t₂ − t₁)</code>.\n                Il grafico è volutamente non monotono: compaiono <b>massimi/minimi locali</b>. È inclusa la <b>tangente</b> in t₁.\n            </p>\n\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1.2fr 1fr\", gap: 12 }}>\n                {/* PANNELLO GRAFICO */}\n                <div style={{ background: \"#fff\", borderRadius: 16, padding: 12, boxShadow: \"0 1px 4px rgba(0,0,0,0.08)\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: 8 }}>\n                        <div style={{ fontWeight: 600 }}>Diagramma spazio–tempo s(t)</div>\n                        <div style={{ display: \"flex\", gap: 8, alignItems: \"center\", flexWrap: \"wrap\" }}>\n                            <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n                                <input type=\"checkbox\" checked={showSecant} onChange={(e) => setShowSecant(e.target.checked)} /> Mostra secante\n                            </label>\n                            <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n                                <input type=\"checkbox\" checked={showTangent} onChange={(e) => setShowTangent(e.target.checked)} /> Mostra tangente\n                            </label>\n                            <button onClick={() => setAnimating(true)} style={{ padding: \"6px 10px\", borderRadius: 8, border: \"1px solid #cbd5e1\", background: \"#fff\" }}>\n                                Anima t₂ → t₁\n                            </button>\n                            <button onClick={randomize} style={{ padding: \"6px 10px\", borderRadius: 8, border: \"1px solid #cbd5e1\", background: \"#fff\" }}>\n                                Nuovo grafico casuale\n                            </button>\n                        </div>\n                    </div>\n\n                    <svg\n                        viewBox={`0 0 ${WIDTH} ${HEIGHT}`}\n                        style={{ width: \"100%\", height: \"auto\", cursor: drag ? \"grabbing\" : \"crosshair\" }}\n                        onMouseDown={onMouseDown}\n                        onMouseMove={onMouseMove}\n                        onMouseUp={onMouseUp}\n                        onMouseLeave={onMouseLeave}\n                    >\n                        {/* area sfondo */}\n                        <rect x={0} y={0} width={WIDTH} height={HEIGHT} fill=\"#ffffff\" rx={16} />\n\n                        {/* griglia verticale (tempo) */}\n                        {tTicks.map((t) => (\n                            <line key={t} x1={toX(t)} y1={PAD_T} x2={toX(t)} y2={HEIGHT - PAD_B} stroke=\"#e5e7eb\" />\n                        ))}\n                        {/* griglia orizzontale (spazio) */}\n                        {sTicks.map((s, i) => (\n                            <line key={i} x1={PAD_L} y1={toY(s)} x2={WIDTH - PAD_R} y2={toY(s)} stroke=\"#e5e7eb\" />\n                        ))}\n\n                        {/* assi */}\n                        <line x1={PAD_L} y1={HEIGHT - PAD_B} x2={WIDTH - PAD_R} y2={HEIGHT - PAD_B} stroke=\"#111827\" strokeWidth={2} />\n                        <line x1={PAD_L} y1={PAD_T} x2={PAD_L} y2={HEIGHT - PAD_B} stroke=\"#111827\" strokeWidth={2} />\n\n                        {/* etichette assi */}\n                        {tTicks.map((t) => (\n                            <text key={t} x={toX(t)} y={HEIGHT - PAD_B + 18} fontSize={11} textAnchor=\"middle\" fill=\"#374151\">{t}</text>\n                        ))}\n                        {sTicks.map((s, i) => (\n                            <text key={i} x={PAD_L - 8} y={toY(s) + 4} fontSize={11} textAnchor=\"end\" fill=\"#374151\">{s.toFixed(0)}</text>\n                        ))}\n                        <text x={(PAD_L + WIDTH - PAD_R) / 2} y={HEIGHT - 10} fontSize={12} textAnchor=\"middle\" fill=\"#111827\">tempo t (s)</text>\n                        <text x={18} y={(PAD_T + HEIGHT - PAD_B) / 2} fontSize={12} textAnchor=\"middle\" fill=\"#111827\" transform={`rotate(-90 18 ${(PAD_T + HEIGHT - PAD_B) / 2})`}>\n                            spazio s (m)\n                        </text>\n\n                        {/* curva s(t) */}\n                        <path d={pathS} fill=\"none\" stroke=\"#2563eb\" strokeWidth={3} />\n\n                        {/* marcatori di estremi */}\n                        {maxima.map((p, idx) => (\n                            <g key={`max-${idx}`}>\n                                <polygon points={`${toX(p.t)},${toY(p.s) - 8} ${toX(p.t) - 7},${toY(p.s) + 6} ${toX(p.t) + 7},${toY(p.s) + 6}`} fill=\"#ef4444\" />\n                                <text x={toX(p.t)} y={toY(p.s) - 12} fontSize={11} textAnchor=\"middle\" fill=\"#991b1b\">max</text>\n                            </g>\n                        ))}\n                        {minima.map((p, idx) => (\n                            <g key={`min-${idx}`}>\n                                <polygon points={`${toX(p.t)},${toY(p.s) + 8} ${toX(p.t) - 7},${toY(p.s) - 6} ${toX(p.t) + 7},${toY(p.s) - 6}`} fill=\"#3b82f6\" />\n                                <text x={toX(p.t)} y={toY(p.s) + 16} fontSize={11} textAnchor=\"middle\" fill=\"#1e3a8a\">min</text>\n                            </g>\n                        ))}\n\n                        {/* ✨ Tangente in t1 */}\n                        {showTangent && (\n                            (() => {\n                                const y0 = s1 + vT1 * (0 - t1);\n                                const yT = s1 + vT1 * (T_MAX - t1);\n                                return (\n                                    <g>\n                                        <line x1={toX(0)} y1={toY(y0)} x2={toX(T_MAX)} y2={toY(yT)} stroke=\"#9333ea\" strokeWidth={3} strokeDasharray=\"6 6\" />\n                                        <text x={toX(Math.min(T_MAX, t1 + 1))} y={toY(s1 + vT1 * Math.min(1, T_MAX - t1)) - 8} fontSize={11} textAnchor=\"start\" fill=\"#6d28d9\">\n                                            tangente in t₁ (pendenza ≈ v(t₁))\n                                        </text>\n                                    </g>\n                                );\n                            })()\n                        )}\n\n                        {/* Secante (se definita) */}\n                        {canCompute && showSecant && (\n                            <g>\n                                <line x1={toX(t1)} y1={toY(s1)} x2={toX(t2)} y2={toY(s2)} stroke=\"#059669\" strokeWidth={3} />\n\n                                {/* Delta t linea alla base */}\n                                <line x1={toX(t1)} y1={HEIGHT - PAD_B} x2={toX(t2)} y2={HEIGHT - PAD_B} stroke=\"#10b981\" strokeWidth={4} />\n                                <text x={(toX(t1) + toX(t2)) / 2} y={HEIGHT - PAD_B + 22} fontSize={12} textAnchor=\"middle\" fill=\"#065f46\">Δt = {(t2 - t1).toFixed(2)} s</text>\n\n                                {/* Delta s linea a destra */}\n                                <line x1={WIDTH - PAD_R} y1={toY(s1)} x2={WIDTH - PAD_R} y2={toY(s2)} stroke=\"#10b981\" strokeWidth={4} />\n                                <text x={WIDTH - PAD_R - 6} y={(toY(s1) + toY(s2)) / 2} fontSize={12} textAnchor=\"end\" fill=\"#065f46\">Δs = {(s2 - s1).toFixed(2)} m</text>\n                            </g>\n                        )}\n\n                        {/* handles */}\n                        <g>\n                            <line x1={toX(t1)} y1={toY(s1)} x2={toX(t1)} y2={toY(sMin)} stroke=\"#ef4444\" strokeDasharray=\"4 4\" />\n                            <circle cx={toX(t1)} cy={toY(s1)} r={6.5} fill=\"#ef4444\" />\n                            <circle cx={toX(t1)} cy={toY(s1)} r={10} fill=\"none\" stroke=\"#ef4444\" strokeOpacity={0.5} />\n                            <rect x={toX(t1) - 34} y={toY(s1) - 28} width={68} height={18} fill=\"white\" stroke=\"#ef4444\" rx={4} />\n                            <text x={toX(t1)} y={toY(s1) - 15} fontSize={11} textAnchor=\"middle\" fill=\"#111827\">t={t1.toFixed(2)} s</text>\n\n                            <line x1={toX(t2)} y1={toY(s2)} x2={toX(t2)} y2={toY(sMin)} stroke=\"#f59e0b\" strokeDasharray=\"4 4\" />\n                            <circle cx={toX(t2)} cy={toY(s2)} r={6.5} fill=\"#f59e0b\" />\n                            <circle cx={toX(t2)} cy={toY(s2)} r={10} fill=\"none\" stroke=\"#f59e0b\" strokeOpacity={0.5} />\n                            <rect x={toX(t2) - 34} y={toY(s2) - 28} width={68} height={18} fill=\"white\" stroke=\"#f59e0b\" rx={4} />\n                            <text x={toX(t2)} y={toY(s2) - 15} fontSize={11} textAnchor=\"middle\" fill=\"#111827\">t={t2.toFixed(2)} s</text>\n                        </g>\n                    </svg>\n                </div>\n\n                {/* PANNELLO CONTROLLI/VALORI */}\n                <div style={{ background: \"#fff\", borderRadius: 16, padding: 12, boxShadow: \"0 1px 4px rgba(0,0,0,0.08)\" }}>\n                    <div style={{ fontSize: 14, fontWeight: 600, marginBottom: 8 }}>Controlli</div>\n                    <div style={{ display: \"grid\", gap: 8 }}>\n                        <label>\n                            t1: <input type=\"range\" min={0} max={T_MAX} step={0.01} value={t1} onChange={(e) => setT1(Math.min(parseFloat(e.target.value), t2))} />\n                            <span style={{ marginLeft: 8 }}>{t1.toFixed(2)} s</span>\n                        </label>\n                        <label>\n                            t2: <input type=\"range\" min={0} max={T_MAX} step={0.01} value={t2} onChange={(e) => setT2(Math.max(parseFloat(e.target.value), t1))} />\n                            <span style={{ marginLeft: 8 }}>{t2.toFixed(2)} s</span>\n                        </label>\n                        <div style={{ display: \"flex\", gap: 8, flexWrap: \"wrap\", alignItems: \"center\" }}>\n                            <button onClick={() => { setT1(2); setT2(7); setAnimating(false); }} style={{ padding: \"6px 10px\", borderRadius: 8, border: \"1px solid #cbd5e1\", background: \"#fff\" }}>\n                                Reimposta t1/t2\n                            </button>\n                            <button onClick={() => setAnimating(true)} style={{ padding: \"6px 10px\", borderRadius: 8, border: \"1px solid #cbd5e1\", background: \"#fff\" }}>\n                                Anima t₂ → t₁\n                            </button>\n                            <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n                                <input type=\"checkbox\" checked={showSecant} onChange={(e) => setShowSecant(e.target.checked)} /> Mostra secante\n                            </label>\n                            <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n                                <input type=\"checkbox\" checked={showTangent} onChange={(e) => setShowTangent(e.target.checked)} /> Mostra tangente\n                            </label>\n                        </div>\n                    </div>\n\n                    <hr style={{ margin: \"12px 0\", border: 0, borderTop: \"1px solid #e5e7eb\" }} />\n\n                    <div style={{ fontSize: 14 }}>\n                        <div> s(t₁) = <b>{s1.toFixed(2)}</b> m, &nbsp; s(t₂) = <b>{s2.toFixed(2)}</b> m</div>\n                        {canCompute ? (\n                            <>\n                                <div style={{ marginTop: 6 }}>\n                                    <b>Velocità media</b>: v̄ = (Δs / Δt) = <b>{vMedia.toFixed(3)}</b> m/s\n                                </div>\n                                <div style={{ color: \"#64748b\", fontSize: 12, marginTop: 4 }}>\n                                    Secante verde ↔ pendenza = v̄. Tangente viola in t₁ ↔ pendenza ≈ v(t₁).\n                                </div>\n                            </>\n                        ) : (\n                            <div style={{ color: \"#b91c1c\", marginTop: 6 }}>Scegli due istanti distinti (t₂ ≠ t₁).</div>\n                        )}\n                    </div>\n\n                    <hr style={{ margin: \"12px 0\", border: 0, borderTop: \"1px solid #e5e7eb\" }} />\n\n                    <div style={{ fontSize: 13, color: \"#475569\" }}>\n                        Suggerimento didattico: sposta t₂ verso t₁ e osserva come la secante tende alla tangente. In quel limite ottieni la\n                        <i> velocità istantanea</i>.\n                    </div>\n                </div>\n            </div>\n\n            {/* SOTTO-GRAFICO: v(t) numerica */}\n            <div style={{ background: \"#fff\", borderRadius: 16, padding: 12, marginTop: 12, boxShadow: \"0 1px 4px rgba(0,0,0,0.08)\" }}>\n                <div style={{ fontWeight: 600, marginBottom: 8 }}>Derivata numerica v(t)</div>\n                <svg viewBox={`0 0 ${WIDTH} ${HEIGHT_V}`} style={{ width: \"100%\", height: \"auto\" }}>\n                    {/* griglia */}\n                    {Array.from({ length: T_MAX + 1 }, (_, i) => i).map((t) => (\n                        <line key={t} x1={toX(t)} y1={20} x2={toX(t)} y2={HEIGHT_V - 40} stroke=\"#e5e7eb\" />\n                    ))}\n                    {vTicks.map((v, i) => (\n                        <line key={i} x1={PAD_L} y1={toYv(v)} x2={WIDTH - PAD_R} y2={toYv(v)} stroke=\"#e5e7eb\" />\n                    ))}\n\n                    {/* assi */}\n                    <line x1={PAD_L} y1={HEIGHT_V - 40} x2={WIDTH - PAD_R} y2={HEIGHT_V - 40} stroke=\"#111827\" strokeWidth={2} />\n                    <line x1={PAD_L} y1={20} x2={PAD_L} y2={HEIGHT_V - 40} stroke=\"#111827\" strokeWidth={2} />\n\n                    {/* etichette */}\n                    {Array.from({ length: T_MAX + 1 }, (_, i) => i).map((t) => (\n                        <text key={t} x={toX(t)} y={HEIGHT_V - 20} fontSize={11} textAnchor=\"middle\" fill=\"#374151\">{t}</text>\n                    ))}\n                    {vTicks.map((v, i) => (\n                        <text key={i} x={PAD_L - 8} y={toYv(v) + 4} fontSize={11} textAnchor=\"end\" fill=\"#374151\">{v.toFixed(1)}</text>\n                    ))}\n                    <text x={(PAD_L + WIDTH - PAD_R) / 2} y={HEIGHT_V - 6} fontSize={12} textAnchor=\"middle\" fill=\"#111827\">tempo t (s)</text>\n                    <text x={18} y={(20 + HEIGHT_V - 40) / 2} fontSize={12} textAnchor=\"middle\" fill=\"#111827\" transform={`rotate(-90 18 ${(20 + HEIGHT_V - 40) / 2})`}>\n                        v(t) (m/s)\n                    </text>\n\n                    {/* curva v(t) */}\n                    <path d={pathV} fill=\"none\" stroke=\"#7c3aed\" strokeWidth={2.5} />\n\n                    {/* evidenzia t1,t2 e v̄ */}\n                    <line x1={toX(t1)} y1={20} x2={toX(t1)} y2={HEIGHT_V - 40} stroke=\"#9ca3af\" strokeDasharray=\"4 4\" />\n                    <line x1={toX(t2)} y1={20} x2={toX(t2)} y2={HEIGHT_V - 40} stroke=\"#9ca3af\" strokeDasharray=\"4 4\" />\n                    {canCompute && (\n                        <g>\n                            <line x1={toX(t1)} y1={toYv(vMedia)} x2={toX(t2)} y2={toYv(vMedia)} stroke=\"#10b981\" strokeWidth={4} />\n                            <text x={(toX(t1) + toX(t2)) / 2} y={toYv(vMedia) - 6} fontSize={11} textAnchor=\"middle\" fill=\"#065f46\">v̄</text>\n                        </g>\n                    )}\n                    {/* marcatore di v(t1) per collegarlo alla tangente */}\n                    <g>\n                        <circle cx={toX(t1)} cy={toYv(vT1)} r={4} fill=\"#9333ea\" />\n                        <text x={toX(t1) + 6} y={toYv(vT1) - 6} fontSize={11} fill=\"#6d28d9\">v(t₁)</text>\n                    </g>\n                </svg>\n            </div>\n        </div>\n    );\n}\n"],"names":["T_MAX","N_SAMPLES","clamp","x","a","b","Math","max","min","lerp","t","interp1","tArr","yArr","n","length","lo","hi","mid","u","refineExtremum","sArr","i","x0","y0","x1","y1","x2","y2","denom","abs","s","tClamped","MediaVelocitaSecanteDemo","WIDTH","HEIGHT","PAD_L","HEIGHT_V","seed","setSeed","useState","floor","random","useMemo","arguments","undefined","arr","Array","linspace","sFunc","rnd","drift","A1","A2","A3","w1","w2","w3","phi1","PI","phi2","phi3","offset","sin","cos","makePosition","map","vArr","v","fill","numericDerivative","sMinRaw","sMaxRaw","padV","sMin","sMax","spanS","vMinRaw","vMaxRaw","padVv","vMin","vMax","spanV","toX","toY","toYv","fromX","px","t1","setT1","t2","setT2","s1","s2","canCompute","vMedia","NaN","showSecant","setShowSecant","showTangent","setShowTangent","drag","setDrag","maxima","minima","dy1","dy2","p","push","pickStep","ceil","filter","_","idx","findLocalExtrema","animating","setAnimating","useEffect","raf","step","dist","next","requestAnimationFrame","cancelAnimationFrame","tTicks","from","sTicks","vTicks","pathS","d","py","concat","pathV","vT1","_jsxs","style","maxWidth","margin","padding","children","_jsx","fontSize","fontWeight","marginBottom","color","marginTop","marginLeft","display","gridTemplateColumns","gap","background","borderRadius","boxShadow","justifyContent","alignItems","flexWrap","type","checked","onChange","e","target","onClick","border","viewBox","width","height","cursor","onMouseDown","rect","currentTarget","getBoundingClientRect","mx","clientX","left","mt","d1","d2","onMouseMove","onMouseUp","onMouseLeave","y","rx","stroke","strokeWidth","textAnchor","toFixed","transform","points","yT","strokeDasharray","cx","cy","r","strokeOpacity","value","parseFloat","borderTop","_Fragment"],"sourceRoot":""}