{"version":3,"file":"static/js/252.c19598b1.chunk.js","mappings":"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","sources":["demos/intervalli-r/IntervalliRDemo.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\n\n/** ===== Types & constants ===== */\nconst SetKinds = {\n    CLOSED: \"[a,b]\",\n    OPEN: \"(a,b)\",\n    LEFT_OPEN: \"(a,b]\",\n    RIGHT_OPEN: \"[a,b)\",\n    RAY_RIGHT_CLOSED: \"[a, +∞)\",\n    RAY_RIGHT_OPEN: \"(a, +∞)\",\n    RAY_LEFT_CLOSED: \"(-∞, b]\",\n    RAY_LEFT_OPEN: \"(-∞, b)\",\n    WHOLE: \"(-∞, +∞)\",\n} as const;\ntype SetKind = typeof SetKinds[keyof typeof SetKinds];\n\ntype Geom = { left: number; right: number; width: number };\n\nfunction clamp(v: number, a: number, b: number) {\n    return Math.max(a, Math.min(b, v));\n}\n\n/** ---- TIPI PER LE VERIFICHE (evita l’errore TS con includes) ---- */\nconst BOUNDED_INTERVALS: ReadonlyArray<SetKind> = [\n    SetKinds.CLOSED,\n    SetKinds.OPEN,\n    SetKinds.LEFT_OPEN,\n    SetKinds.RIGHT_OPEN,\n];\nconst RAY_RIGHT: ReadonlyArray<SetKind> = [\n    SetKinds.RAY_RIGHT_CLOSED,\n    SetKinds.RAY_RIGHT_OPEN,\n];\nconst RAY_LEFT: ReadonlyArray<SetKind> = [\n    SetKinds.RAY_LEFT_CLOSED,\n    SetKinds.RAY_LEFT_OPEN,\n];\nconst WITH_A_ENDPOINT: ReadonlyArray<SetKind> = [\n    ...BOUNDED_INTERVALS,\n    ...RAY_RIGHT,\n];\nconst WITH_B_ENDPOINT: ReadonlyArray<SetKind> = [\n    ...BOUNDED_INTERVALS,\n    ...RAY_LEFT,\n];\nconst A_INCLUDED: ReadonlyArray<SetKind> = [\n    SetKinds.CLOSED,\n    SetKinds.RIGHT_OPEN,\n    SetKinds.RAY_RIGHT_CLOSED,\n];\nconst B_INCLUDED: ReadonlyArray<SetKind> = [\n    SetKinds.CLOSED,\n    SetKinds.LEFT_OPEN,\n    SetKinds.RAY_LEFT_CLOSED,\n];\n\nfunction describeSet(kind: SetKind, a: number, b: number) {\n    const lowerBounded = WITH_A_ENDPOINT.includes(kind);\n    const upperBounded = WITH_B_ENDPOINT.includes(kind);\n\n    const inf: number | \"-∞\" = lowerBounded ? a : \"-∞\";\n    const sup: number | \"+∞\" = upperBounded ? b : \"+∞\";\n\n    let hasMin = false;\n    let hasMax = false;\n    switch (kind) {\n        case SetKinds.CLOSED:\n            hasMin = true; hasMax = true; break;\n        case SetKinds.RIGHT_OPEN:\n            hasMin = true; hasMax = false; break;\n        case SetKinds.LEFT_OPEN:\n            hasMin = false; hasMax = true; break;\n        case SetKinds.OPEN:\n            hasMin = false; hasMax = false; break;\n        case SetKinds.RAY_RIGHT_CLOSED:\n            hasMin = true; hasMax = false; break;\n        case SetKinds.RAY_RIGHT_OPEN:\n            hasMin = false; hasMax = false; break;\n        case SetKinds.RAY_LEFT_CLOSED:\n            hasMin = false; hasMax = true; break;\n        case SetKinds.RAY_LEFT_OPEN:\n            hasMin = false; hasMax = false; break;\n        case SetKinds.WHOLE:\n            hasMin = false; hasMax = false; break;\n    }\n    return { lowerBounded, upperBounded, inf, sup, hasMin, hasMax };\n}\n\nfunction Marker({ x, included, label }: { x: number; included: boolean; label?: string }) {\n    const dotStyle: React.CSSProperties = {\n        width: 12, height: 12, borderRadius: \"50%\", border: \"2px solid #111\",\n        background: included ? \"#111\" : \"#fff\",\n    };\n    const wrap: React.CSSProperties = {\n        position: \"absolute\", left: x, top: 24, transform: \"translate(-50%,-50%)\", textAlign: \"center\",\n    };\n    const labelStyle: React.CSSProperties = { fontSize: 12, marginTop: 4, color: \"#334155\" };\n    return (\n        <div style={wrap}>\n            <div style={dotStyle} />\n            {label && <div style={labelStyle}>{label}</div>}\n        </div>\n    );\n}\n\n/** ===== Component ===== */\nexport default function IntervalliRDemo() {\n    // State\n    const [kind, setKind] = useState<SetKind>(SetKinds.CLOSED);\n    const [a, setA] = useState<number>(-2);\n    const [b, setB] = useState<number>(3);\n    const [speed, setSpeed] = useState<number>(0.8); // px/ms (convertita in unità matematiche via scala)\n    const [playing, setPlaying] = useState<boolean>(true);\n\n    // Geometria linea\n    const lineRef = useRef<HTMLDivElement | null>(null);\n    const [geom, setGeom] = useState<Geom>({ left: 0, right: 0, width: 0 });\n\n    useEffect(() => {\n        const updateGeom = () => {\n            const el = lineRef.current;\n            if (!el) return;\n            const r = el.getBoundingClientRect();\n            setGeom({ left: r.left, right: r.right, width: r.width });\n        };\n        updateGeom();\n        window.addEventListener(\"resize\", updateGeom);\n        return () => window.removeEventListener(\"resize\", updateGeom);\n    }, []);\n\n    // Mappatura ℝ <-> pixel\n    const view = useMemo(() => {\n        let minX: number, maxX: number;\n        if (BOUNDED_INTERVALS.includes(kind)) {\n            const pad = Math.max(1, (b - a) * 0.2);\n            minX = a - pad;\n            maxX = b + pad;\n        } else if (RAY_RIGHT.includes(kind)) {\n            const m = Math.max(1, Math.abs(a) + 2);\n            minX = a - 2 * m;\n            maxX = a + 8 * m;\n        } else if (RAY_LEFT.includes(kind)) {\n            const m = Math.max(1, Math.abs(b) + 2);\n            minX = b - 8 * m;\n            maxX = b + 2 * m;\n        } else {\n            minX = -10; maxX = 10;\n        }\n        const scale = geom.width > 0 ? (geom.width - 40) / (maxX - minX) : 1; // padding 20px lato\n        const toPx = (x: number) => 20 + (x - minX) * scale;\n        const fromPx = (px: number) => minX + (px - 20) / scale;\n        return { minX, maxX, toPx, fromPx, scale };\n    }, [geom.width, kind, a, b]);\n\n    const desc = useMemo(() => describeSet(kind, a, b), [kind, a, b]);\n\n    // Stato pallina (coordinate matematiche)\n    const [x, setX] = useState<number>((a + b) / 2);\n    const [vx, setVx] = useState<1 | -1>(1);\n    const lastT = useRef<number | null>(null);\n\n    useEffect(() => {\n        const center = SetKinds.WHOLE === kind\n            ? 0\n            : (Number.isFinite(a) && Number.isFinite(b))\n                ? (a + b) / 2\n                : Number.isFinite(a) ? a + 1 : Number.isFinite(b) ? b - 1 : 0;\n        setX(center);\n        setVx(1);\n    }, [kind, a, b]);\n\n    useEffect(() => {\n        if (!playing) { lastT.current = null; return; }\n        let raf = 0;\n        const tick = (t: number) => {\n            if (!lastT.current) lastT.current = t;\n            const dt = t - lastT.current; // ms\n            lastT.current = t;\n\n            const vu = speed / (view.scale || 1); // unità matematiche per ms\n            let nx = x + (vx >= 0 ? vu * dt : -vu * dt);\n\n            const hasLower = WITH_A_ENDPOINT.includes(kind);\n            const hasUpper = WITH_B_ENDPOINT.includes(kind);\n            const lower = hasLower ? a : -Infinity;\n            const upper = hasUpper ? b : +Infinity;\n\n            if (nx <= lower && Number.isFinite(lower)) { nx = lower; setVx(1); }\n            else if (nx >= upper && Number.isFinite(upper)) { nx = upper; setVx(-1); }\n            else if (!Number.isFinite(upper) && nx > view.maxX + 2) { nx = view.minX - 1; }\n            else if (!Number.isFinite(lower) && nx < view.minX - 2) { nx = view.maxX + 1; }\n\n            setX(nx);\n            raf = requestAnimationFrame(tick);\n        };\n        raf = requestAnimationFrame(tick);\n        return () => cancelAnimationFrame(raf);\n    }, [playing, speed, view.scale, view.minX, view.maxX, x, vx, a, b, kind]);\n\n    const px = view.toPx(x);\n    const ax = Number.isFinite(a) ? view.toPx(a) : null;\n    const bx = Number.isFinite(b) ? view.toPx(b) : null;\n\n    const includeA = A_INCLUDED.includes(kind);\n    const includeB = B_INCLUDED.includes(kind);\n\n    /** ===== UI ===== */\n    const card: React.CSSProperties = { background: \"#fff\", borderRadius: 16, padding: 12, boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\" };\n    const small: React.CSSProperties = { fontSize: 12, color: \"#64748b\" };\n\n    return (\n        <div style={{ padding: 24, maxWidth: 1000, margin: \"0 auto\" }}>\n            <h1 style={{ fontSize: 22, fontWeight: 700, marginBottom: 6 }}>\n                Pallina su una retta — inf, sup, minimo, massimo\n            </h1>\n            <p style={{ color: \"#334155\", marginBottom: 12 }}>\n                Scegli l'insieme: la pallina rimbalza sugli estremi se finiti; se non è limitato, prosegue oltre (con un piccolo “wrap” visuale).\n            </p>\n\n            <div style={{ display: \"grid\", gap: 12, gridTemplateColumns: \"1fr 1fr\" }}>\n                <div style={card}>\n                    <label style={{ display: \"block\", fontSize: 14, fontWeight: 600, marginBottom: 6 }}>Tipo di insieme</label>\n                    <select value={kind} onChange={(e) => setKind(e.target.value as SetKind)} style={{ width: \"100%\", padding: 8, borderRadius: 8, border: \"1px solid #cbd5e1\" }}>\n                        {Object.values(SetKinds).map((k) => <option key={k} value={k}>{k}</option>)}\n                    </select>\n                    <div style={{ ...small, marginTop: 6 }}>Prova aperti/chiusi e semiretti per vedere quando sup/inf sono raggiunti (min/max).</div>\n                </div>\n\n                <div style={card}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 12 }}>\n                        <div>\n                            <label style={{ display: \"block\", fontSize: 14, fontWeight: 600 }}>a</label>\n                            <input type=\"number\" value={a} step={0.5} onChange={(e) => setA(parseFloat(e.target.value))}\n                                   style={{ width: \"100%\", padding: 8, borderRadius: 8, border: \"1px solid #cbd5e1\" }} />\n                        </div>\n                        <div>\n                            <label style={{ display: \"block\", fontSize: 14, fontWeight: 600 }}>b</label>\n                            <input type=\"number\" value={b} step={0.5} onChange={(e) => setB(parseFloat(e.target.value))}\n                                   style={{ width: \"100%\", padding: 8, borderRadius: 8, border: \"1px solid #cbd5e1\" }} />\n                        </div>\n                    </div>\n                    <div style={{ ...small, marginTop: 6 }}>Ignorato se non serve (per semiretti/ℝ usa solo a o b).</div>\n                </div>\n\n                <div style={card}>\n                    <label style={{ display: \"block\", fontSize: 14, fontWeight: 600 }}>Velocità</label>\n                    <input type=\"range\" min={0.2} max={2.0} step={0.1} value={speed}\n                           onChange={(e) => setSpeed(parseFloat(e.target.value))}\n                           style={{ width: \"100%\" }} />\n                    <div style={{ display: \"flex\", alignItems: \"center\", gap: 8, marginTop: 8 }}>\n                        <button onClick={() => setPlaying((p) => !p)}\n                                style={{ padding: \"6px 12px\", borderRadius: 10, border: \"1px solid #cbd5e1\", background: \"#fff\" }}>\n                            {playing ? \"Pausa\" : \"Play\"}\n                        </button>\n                        <div style={small}>{playing ? \"In esecuzione\" : \"In pausa\"}</div>\n                    </div>\n                </div>\n\n                <div style={card}>\n                    <div style={{ fontSize: 14, fontWeight: 600, marginBottom: 8 }}>Proprietà dell'insieme</div>\n                    <ul style={{ fontSize: 14, lineHeight: 1.8, margin: 0, paddingLeft: 18 }}>\n                        <li>Inferiormente limitato: <b>{desc.lowerBounded ? \"Sì\" : \"No\"}</b></li>\n                        <li>Superiormente limitato: <b>{desc.upperBounded ? \"Sì\" : \"No\"}</b></li>\n                        <li>Estremo Inferiore: <b>{String(desc.inf)}</b> {desc.hasMin && <span style={{ fontSize: 12, color: \"#047857\" }}>(= minimo)</span>}</li>\n                        <li>Estremo Superiore: <b>{String(desc.sup)}</b> {desc.hasMax && <span style={{ fontSize: 12, color: \"#047857\" }}>(= massimo)</span>}</li>\n                        <li>Minimo esiste: <b>{desc.hasMin ? \"Sì\" : \"No\"}</b></li>\n                        <li>Massimo esiste: <b>{desc.hasMax ? \"Sì\" : \"No\"}</b></li>\n                    </ul>\n                </div>\n            </div>\n\n            {/* Number line */}\n            <div ref={lineRef}\n                 style={{ position: \"relative\", border: \"1px solid #e5e7eb\", borderRadius: 16, background: \"#fff\",\n                     boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.04)\", height: 160, overflow: \"hidden\", marginTop: 12 }}>\n                {/* base line */}\n                <div style={{ position: \"absolute\", left: 20, right: 20, top: \"50%\", height: 2, background: \"#111827\" }} />\n\n                {/* infinity arrows */}\n                {!WITH_A_ENDPOINT.includes(kind) && (\n                    <div style={{ position: \"absolute\", left: 8, top: \"50%\", transform: \"translateY(-50%)\" }}>\n                        <div style={{\n                            width: 0, height: 0, borderTop: \"6px solid transparent\", borderBottom: \"6px solid transparent\",\n                            borderRight: \"12px solid #111827\"\n                        }} />\n                    </div>\n                )}\n                {!WITH_B_ENDPOINT.includes(kind) && (\n                    <div style={{ position: \"absolute\", right: 8, top: \"50%\", transform: \"translateY(-50%) rotate(180deg)\" }}>\n                        <div style={{\n                            width: 0, height: 0, borderTop: \"6px solid transparent\", borderBottom: \"6px solid transparent\",\n                            borderRight: \"12px solid #111827\"\n                        }} />\n                    </div>\n                )}\n\n                {/* endpoints */}\n                {Number.isFinite(a) && WITH_A_ENDPOINT.includes(kind) && ax !== null && (\n                    <Marker x={ax} included={includeA} label=\"a\" />\n                )}\n                {Number.isFinite(b) && WITH_B_ENDPOINT.includes(kind) && bx !== null && (\n                    <Marker x={bx} included={includeB} label=\"b\" />\n                )}\n\n                {/* shaded interval */}\n                {(() => {\n                    const y = 20; const thickness = 6;\n                    let L = Number.isFinite(a) && ax !== null ? ax : 20;\n                    let R = Number.isFinite(b) && bx !== null ? bx : (geom.width - 20);\n                    if (RAY_RIGHT.includes(kind) && ax !== null) { L = ax; R = geom.width - 20; }\n                    if (RAY_LEFT.includes(kind) && bx !== null) { L = 20; R = bx; }\n                    if (kind === SetKinds.WHOLE) { L = 20; R = geom.width - 20; }\n                    const barWrap: React.CSSProperties = { position: \"absolute\", left: 0, right: 0, top: `calc(50% - ${y}px)` };\n                    const bar: React.CSSProperties = { position: \"absolute\", left: Math.min(L, R), width: Math.abs(R - L),\n                        height: thickness, background: \"rgba(59,130,246,0.25)\", top: -thickness / 2 };\n                    return <div style={barWrap}><div style={bar} /></div>;\n                })()}\n\n                {/* ball */}\n                <div title=\"pallina\"\n                     style={{ position: \"absolute\", width: 20, height: 20, borderRadius: \"50%\", background: \"#e11d48\",\n                         boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\", left: px, top: \"50%\",\n                         transform: \"translate(-50%, -50%)\" }} />\n                {/* labels min/max */}\n                {desc.hasMin && Number.isFinite(a) && ax !== null && (\n                    <div style={{ position: \"absolute\", fontSize: 12, color: \"#047857\", left: ax, top: 64, transform: \"translateX(-50%)\" }}>min = a</div>\n                )}\n                {desc.hasMax && Number.isFinite(b) && bx !== null && (\n                    <div style={{ position: \"absolute\", fontSize: 12, color: \"#047857\", left: bx, top: 64, transform: \"translateX(-50%)\" }}>max = b</div>\n                )}\n            </div>\n\n            {/* legend */}\n            <div style={{ marginTop: 12, fontSize: 14, color: \"#334155\" }}>\n                <p style={{ margin: \"6px 0\" }}>\n                    <b>Legenda:</b> punto pieno = estremo incluso; punto vuoto = estremo escluso.\n                    Le frecce ai bordi indicano illimitatezza.\n                </p>\n                <p style={{ margin: \"6px 0\" }}>\n                    Per (a,b) la pallina non può toccare a o b: quindi non esistono min/max anche se inf = a e sup = b.\n                </p>\n            </div>\n        </div>\n    );\n}\n"],"names":["SetKinds","CLOSED","OPEN","LEFT_OPEN","RIGHT_OPEN","RAY_RIGHT_CLOSED","RAY_RIGHT_OPEN","RAY_LEFT_CLOSED","RAY_LEFT_OPEN","WHOLE","BOUNDED_INTERVALS","RAY_RIGHT","RAY_LEFT","WITH_A_ENDPOINT","WITH_B_ENDPOINT","A_INCLUDED","B_INCLUDED","Marker","_ref","x","included","label","dotStyle","width","height","borderRadius","border","background","wrap","position","left","top","transform","textAlign","_jsxs","style","children","_jsx","fontSize","marginTop","color","IntervalliRDemo","kind","setKind","useState","a","setA","b","setB","speed","setSpeed","playing","setPlaying","lineRef","useRef","geom","setGeom","right","useEffect","updateGeom","el","current","r","getBoundingClientRect","window","addEventListener","removeEventListener","view","useMemo","minX","maxX","includes","pad","Math","max","m","abs","scale","toPx","fromPx","px","desc","lowerBounded","upperBounded","inf","sup","hasMin","hasMax","describeSet","setX","vx","setVx","lastT","center","Number","isFinite","raf","tick","t","dt","vu","nx","hasLower","hasUpper","lower","Infinity","upper","requestAnimationFrame","cancelAnimationFrame","ax","bx","includeA","includeB","card","padding","boxShadow","small","maxWidth","margin","fontWeight","marginBottom","display","gap","gridTemplateColumns","value","onChange","e","target","Object","values","map","k","_objectSpread","type","step","parseFloat","min","alignItems","onClick","p","lineHeight","paddingLeft","String","ref","overflow","borderTop","borderBottom","borderRight","L","R","barWrap","concat","bar","title"],"sourceRoot":""}